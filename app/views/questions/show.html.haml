!!!
%html
  %head
  %body
  %section.container
  .row
    .col-md-2.profile
      -if @current_agent
        - if @current_agent.class.to_s == "Company" && @current_agent.logo.present?
          = link_to image_tag(@current_agent.logo, class: "logo"), @current_agent, id: "current-user"
        -elsif @current_agent.class.to_s == "User" && @current_agent.profile_picture.present?
          = link_to image_tag(@current_agent.profile_picture, class: 'logo'), @current_agent
        %p= link_to "#{@current_agent.user_name}", @current_agent, id: "current-user"
        %p
          %span Questions score: 
          %span#qu-score= @current_agent.questions_score
        %p
          %span Answers score: 
          %span#an-score= @current_agent.answers_score
        %p
          %span Voting score:
          %span#voting-score= @votes
      -else
        =image_tag "placeholder-guest.png", class: 'logo'
        %br/
        %p Guest
        %p Questions score: 0
        %p Answers score: 0
        %p Voting score: 0
    .col-md-9.col-md-offset-3
      .questions-content
        .questions-score
          %h4= "#{@question.category}: #{@question.title}"
          -if @question.image.present?
            =image_tag @question.image, width: '100%'
          = raw "#{@question.content}"
          \-
          = link_to "#{@question.owner.user_name}", @question.owner, class: "owner-name"
          -if @question.owner_type == "Company"
            %span.label.label-primary= "Company".html_safe
          -if @question.owner_type == "User" && @question.owner.role == "mentor"
            %span.label.label-success= "Mentor".html_safe
          %br
          Score:
          %span.score= @question.up_votes_count + @question.down_votes_count
          - if can? :vote, @question
            -if @up_votes_cast.include? @question.id
              = link_to "&#x25B2".html_safe, vote_question_path(@question, vote: "up", index: "true"), class: 'vote-link vote-up voted-on', method: :put
            -else
              = link_to "&#x25B2".html_safe, vote_question_path(@question, vote: "up", index: "true"), class: 'vote-link vote-up', method: :put
            -if @down_votes_cast.include? @question.id
              = link_to "&#x25BC".html_safe, vote_question_path(@question, vote: "down", index: "true"), method: :put, class: 'vote-link vote-down voted-on'
            -else
              = link_to "&#x25BC".html_safe, vote_question_path(@question, vote: "down", index: "true"), method: :put, class: 'vote-link vote-down'
          - if can? :edit, @question
            = link_to 'Edit', edit_question_path(@question)
          - if can? :destroy, @question
            = link_to 'Delete', question_path(@question), :method => :delete, :data => { :confirm => 'Are you sure?' }
      %br
      .answers
        - @answers.each do |answer|
          .answers-score
            = raw "#{answer.content}"
            = link_to "#{answer.owner.user_name}", answer.owner, class: "answer-owner-name"
            %br/
            Score:
            %span.answer-score= answer.up_votes_count + answer.down_votes_count
            - if can? :vote, answer
              -if @answer_up_votes_cast.include? answer.id
                = link_to "&#x25B2".html_safe, vote_question_answer_path(@question, answer, vote: "up"), method: :put, class: 'answer-vote-link answer-vote-up answer-voted-on'
              -else 
                = link_to "&#x25B2".html_safe, vote_question_answer_path(@question, answer, vote: "up"), method: :put, class: 'answer-vote-link answer-vote-up'
              -if @answer_down_votes_cast.include? answer.id
                = link_to "&#x25BC".html_safe, vote_question_answer_path(@question, answer, vote: "down"), method: :put, class: 'answer-vote-link answer-vote-down answer-voted-on'
              -else
                = link_to "&#x25BC".html_safe, vote_question_answer_path(@question, answer, vote: "down"), method: :put, class: 'answer-vote-link answer-vote-down'
            - if can? :edit, answer
              = link_to 'Edit', edit_question_answer_path(@question, answer)
            - if can? :destroy, answer
              = link_to 'Delete', question_answer_path(@question, answer), :method => :delete, :data => { :confirm => 'Are you sure?' }
            .comments
              - answer.comments.order(:created_at).each do |comment|
                .comments-score
                  .comment-div
                    = "#{comment.content} - "
                    = link_to "#{comment.owner.user_name}", comment.owner
                    %br/
                    Score: 
                    %span.comment-score= comment.up_votes_count + comment.down_votes_count
                    - if can? :vote, comment
                      -if @comment_up_votes_cast.include? comment.id
                        = link_to "&#x25B2".html_safe, vote_question_answer_comment_path(@question, answer, comment, vote: "up"), method: :put, class: 'comment-vote-link comment-vote-up comment-voted-on'
                      -else
                        = link_to "&#x25B2".html_safe, vote_question_answer_comment_path(@question, answer, comment, vote: "up"), method: :put, class: 'comment-vote-link comment-vote-up'
                      -if @comment_down_votes_cast.include? comment.id
                        = link_to "&#x25BC".html_safe, vote_question_answer_comment_path(@question, answer, comment, vote: "down"), method: :put, class: 'comment-vote-link comment-vote-down comment-voted-on'
                      -else
                        = link_to "&#x25BC".html_safe, vote_question_answer_comment_path(@question, answer, comment, vote: "down"), method: :put, class: 'comment-vote-link comment-vote-down'
                    - if can? :edit, comment
                      = link_to 'Edit', edit_question_answer_comment_path(@question, answer, comment)
                    - if can? :destroy, comment
                      = link_to 'Delete', question_answer_comment_path(@question, answer, comment), :method => :delete, :data => { :confirm => 'Are you sure?' }
            -if @current_agent
              =form_for [@question, answer, answer.comments.build] do |f|
                .form-group
                  = f.text_field :content, placeholder: "Comment...", class: "comment_content form-control"
                .form-group
                  = f.submit "Post comment", class: "comment_submit btn btn-primary btn-block", disabled: true
      .answer-input
        = form_for [@question, @question.answers.build] do |f|
          %p= f.text_area :content, :class => 'ckeditor', :ckeditor => {:toolbar => "Normal"}, placeholder: "Have a good answer...?", id: "answer", :size => '80x10'
          = f.submit "Post answer", disabled: true, id: "answer-submit", class: 'btn btn-primary btn-block'
          Answers must be a minimum length, just keep going.

        %hr
